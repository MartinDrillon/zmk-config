#include <behaviors.dtsi>
#include "keys_bepo.h"
#include <dt-bindings/zmk/bt.h>
#include "mouse.dtsi"
#include <dt-bindings/zmk/outputs.h>

//shift circonflexe pour deux point sur le I

#define default 0
#define lower   1
#define raise   2

&sk {
    release-after-ms = <1000>;
    quick-release;
    /delete-property/ ignore-modifiers;
};

/ {
    behaviors {
        AHOH: exclamation_question {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCLAMATION_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp BP_QMARK>, <&kp BP_EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        APOGUI: apos_guillement {
            compatible = "zmk,behavior-mod-morph";
            label = "APOSTROPHE_GUILLEMET";
            #binding-cells = <0>;
            bindings = <&kp BP_APOS>, <&kp BP_DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

#define COMBO(NAME, TIME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <TIME>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
  };
//         ______________________                   ________________________
//        |0  |1  |2  |3  |4  |5  |                |6  |7  |8  |9  |10 |11 |
//        |12 |13 |14 |15 |16 |17 |                |18 |19 |20 |21 |22 |23 |
//        |24 |25 |26 |27 |28 |29 |___          ___|30 |31 |32 |33 |34 |35 |  
//             ‾‾‾|36 |37 |38 |39 |40 |        |41 |42 |43 |44 |45 |‾‾‾               
//                 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
/ {
        combos {
                compatible = "zmk,combos";

                COMBO(circonflexe, 70, &kp BP_CARET, 8 9)
                COMBO(tiret, 70, &kp BP_MINUS, 7 8)
                COMBO(underscore, 70, &kp BP_UNDER, 31 32)                

                COMBO(fleche_haut, 50, &kp UP, 3 15)
                COMBO(fleche_bas, 50, &kp DOWN, 15 27)
                COMBO(fleche_gauche, 70, &kp LEFT, 12 13)           
                COMBO(fleche_droite, 50, &kp RIGHT, 16 17)

                COMBO(supr, 50, &kp DEL, 4 16)
                COMBO(enter_un, 80, &kp ENTER, 13 14 15 16)
                COMBO(enter_two, 80, &kp ENTER, 14 15 16)
                COMBO(esc, 50, &kp ESC, 0 1)
                COMBO(caps_lock, 70, &kp CAPS, 38 43)

                COMBO(ctrl_z, 50, &kp LC(BP_Z), 25 26)
                COMBO(ctrl_c, 50, &kp LC(BP_C), 26 27)
                COMBO(ctrl_v, 50, &kp LC(BP_V), 27 28)
                COMBO(ctrl_s, 70, &kp LC(BP_S), 4 5) 

//                COMBO(lower, 100, &mo 1, 40 42)

        };

        keymap {
            compatible = "zmk,keymap";
    
        default_layer {

            bindings = <
&kp TAB	        &kp BP_AGRV	  &kp BP_B    &kp BP_EAIGU      &kp BP_DOT     &AHOH                                &kp BP_K	    &kp BP_V	    &kp BP_L	&kp BP_M	&kp BP_X	&kp BP_CCED
&kp BP_COMMA	&kp BP_O	  &kp BP_U    &kp BP_A	        &kp BP_I	   &kp BP_J                             &kp BP_G        &kp BP_T	    &kp BP_S	&kp BP_N	&kp BP_R	&kp BP_F
&kp BP_W        &kp BP_Q	  &kp BP_Y    &kp BP_EGRV	    &kp BP_P	   &kp BP_ECIR                          &APOGUI	    &kp BP_D	    &kp BP_H    &kp BP_C    &kp BP_Z	&mo 2
                              &kp LALT    &kp LCTRL         &sk LSHFT      &kp BP_E	 &mo 1    &kp BSPC  &kp SPACE   &sk RSHFT  &kp RALT	 &kp LWIN
            >;      
    };
    
    lower_layer {
		
        bindings = <
&kp BP_AMPS &kp BP_DLLR &kp BP_EURO	  &kp BP_HASH	&kp BP_AT 	    &kp BP_PRCNT	            &kp BP_EQUAL   &kp BP_6    &kp BP_7    &kp BP_8    &kp BP_9	 &kp BP_EXP
&kp BP_LBRC &kp BP_GGA	&kp BP_GDR	  &kp BP_LPAR	&kp BP_RPAR     &kp BP_RBRC                 &kp BP_0       &kp BP_1    &kp BP_2    &kp BP_3    &kp BP_4	 &kp BP_5
&kp BP_LBKT &kp BP_LT   &kp BP_GT     &kp BP_DRNGA  &kp BP_UNDER    &kp BP_RBKT                 &kp BP_STAR	   &kp BP_PLUS &kp BP_FSLH	&kp BP_PIPE	&kp BP_BSLH  &kp BP_IND
                    &trans        &trans        &trans          &trans    &trans  &trans    &trans         &trans       &trans      &trans
                >;      
        };

    
            raise_layer {
    
                bindings = <
    &kp ESC	  &kp Z	          &mwh SCROLL_LEFT	         &mmv MOVE_UP	     &mwh SCROLL_RIGHT          &mwh SCROLL_UP              &kp F1	     &kp F2	    &kp F3   &kp F4	 &kp F5	 &kp F6
    &kp LEFT	&kp R	          &mmv MOVE_LEFT &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &mwh SCROLL_DOWN                                &kp F7    &kp F8      &kp F9	&kp F10	 &kp F11	&kp F12
    &kp RC(LS(TAB))  &kp DLLR	&kp RC(LS(UP))    &kp RC(LS(DOWN))   &kp RC(LS(RIGHT))	      &kp RC(TAB)                   &kp N	     &kp I	    &kp B   &kp DOT  &kp H	&kp GRAVE
                              &trans       &trans         &mkp RCLK          &mkp LCLK	  &trans   &trans  &trans   &trans      &trans	           &trans           &trans
                >;      
            };
    
        };
    };